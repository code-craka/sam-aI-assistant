{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors Swift source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "Sam/**/*.swift"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified Swift code for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns (MVVM, Observer, Strategy, etc.) where beneficial\n3. **Swift Best Practices**: Check for proper use of optionals, error handling, memory management, and Swift idioms\n4. **Performance**: Identify potential performance bottlenecks and suggest optimizations\n5. **Readability**: Recommend improvements for naming, structure, and documentation\n6. **Architecture Compliance**: Ensure code follows the established MVVM + Combine architecture\n7. **Testing**: Suggest areas that need test coverage or improved testability\n\nProvide specific, actionable suggestions while maintaining the existing functionality. Consider the macOS context and SwiftUI/Combine patterns used in this project."
  }
}